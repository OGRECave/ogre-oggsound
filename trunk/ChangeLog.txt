* version 0.94

	* Added OGRE plugin support
		* library can be registered with OGRE as a plugin allowing the creation/management of sounds
		  via the SceneManager::createMovableObject() interface. OGRE automatically creates/destroys
		  the manager and all sounds created via this process.
		  NOTE:- The library still functions the same as before if you don't load via the plugin interface.
	* Fixed loop bug in multi-threaded wav sounds not being set on creation
	* Fixed infinite loop bug when opening wav sounds with extra information

* version 0.93

	* Added automatic pause/restart on fade
	* Fixed potential memory leak in _stream() functions
	* Added OgreOggSoundManager functions for stopping/playing/pausing sounds.
		* Prevents by-passing thread mutex and casuing memory corruption/audio artefacts.
	* Added optional parameter to startFade() to add control to the fading sound.
		* Pass an enumerated value to allow stopping/pausing of the sound when fading is
		  complete, useful when fading out to stop/pause a sound to save cpu time.
		  default: NONE.
	* Fixed crash at maximum sources.

* version 0.92

	* Moved MUTEX from update function into reactivateSounds() - caused major performance issues.

* version 0.91
	
	* Added extra query funtions to listener and sound classes
	* Re-wrote requestSoundSource() to eliminate list invalidation
	* Added sort by distance for reactivated sounds or when playing a new sound
	* Added mutex lock in SoundManager::update()
	* Optimised reactivate function() - periodically checks
	* Added solution file to fix working directory problem in test demo
	* Added default parameter in SoundManager::init(), an empty parameter list will pick default device
	* Updated docs

* version 0.9
	
	* Added multichannel support for ogg/wav files.
	* Improved buffer size management.

* version 0.89

	* Added EFX effect/filter support
	* Added EAX room reverb preset support	
	* Fixed sound position bug 
	* Added flag in OgreOggISound for indicating source management per sound
		Can be used to keep a good level of source objects available, by forcing infrequent
		or single play sounds to immediately give up their source objects when stopped.
	* Added 'TestDemo' project as a playpen.
	* Added support for RIFF WAVE audio files.
	* Fixed unqueue bug in streamed sounds

* version 0.88

	* Added XRAM support for hardware buffers
		As suggested in the OpenAL specification this only applies to static sound buffers
		not streaming buffers.
	* Cleaned up and enhanced supported features checks.

* version 0.87

	* Added loop callback triggers
		slightly inaccurate for streaming sounds, should be more reliable for static sounds.

* version 0.86
	
	* Added callbacks for finished sounds
	* Fixed bug in stop() for static sounds
	* Added enable/disable of callbacks

* version 0.85

	* Fixed crash caused by non-SceneNode derived positioning in OgreOggISound / OgreOggListener.
	* Fixed updating bug in fading where the volume would never stop being set once started. 
          Also ammended startFade() to pick up current sound volume to fade in/out from.

* version 0.84

	* Added setMasterVolume()/getMasterVolume() for global attenuation of sounds.

* Version 0.83

	* Fixed bug with streaming sounds and DataStreamPointer causing open() to fail.

* Version 0.82

	* Added OGRE resource management support
		Audio files must now be specified through OGRE's resource management system,
		allows audio files to be stored and accessed within .zip files etc..

* Version 0.8

	* Fixed crash in shutdown when deleting unused thread.
	
	* Sound Constructor/Destructors made protected members, handled by OgreOggSoundManager.

	* enumDevices() made private, it was an internally used function. renamed to: _enumDevices()

	* _getDeviceList() made public, was used internally but is now a useful public 
	  function for geting a human readable list of audio deivce strings.

* Version 0.7

	* Added ancillary OgreOggSoundManager functions for stopping/pausing/resuming
	  ALL playing sounds.